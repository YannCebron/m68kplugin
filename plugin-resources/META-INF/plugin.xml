<!--
  ~ Copyright 2021 The Authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<idea-plugin url="https://github.com/YannCebron/m68kplugin" xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>com.yanncebron.m68kplugin</id>
  <name>Motorola 68000 Series Assembler</name>
  <vendor email="yann.cebron@gmail.com" url="https://www.yanncebron.com">Yann CÃ©bron</vendor>

  <description><![CDATA[
    Supports <a href="https://en.wikipedia.org/wiki/Motorola_68000_series">Motorola 68000 series</a> assembly language.
    <br/>
    See <a href="https://m68kplugin.yanncebron.com">Documentation</a> for features.
    <br/>
    <br/>
    <em>All product names, trademarks, and registered trademarks are property of their respective owners.</em>
    ]]></description>

  <depends>com.intellij.modules.platform</depends>

  <xi:include href="m68kplugin-amiga.xml"/>

  <resource-bundle>messages.M68kBundle</resource-bundle>

  <extensionPoints>
    <extensionPoint name="browserPane" beanClass="com.yanncebron.m68kplugin.browser.M68kBrowserPaneEP" dynamic="true">
      <with attribute="implementation" implements="com.yanncebron.m68kplugin.browser.M68kBrowserPaneBase"/>
    </extensionPoint>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <errorHandler implementation="com.yanncebron.m68kplugin.ide.M68kErrorReportSubmitter"/>

    <fileType name="M68k Assembler"
              implementationClass="com.yanncebron.m68kplugin.lang.M68kFileType"
              fieldName="INSTANCE"
              language="M68k"
              extensions="s;asm;i;X68"/>
    <lang.parserDefinition
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.M68kParserDefinition"/>

    <stubElementTypeHolder
        externalIdPrefix="M68k."
        class="com.yanncebron.m68kplugin.lang.stubs.M68kStubElementTypesHolder"/>
    <stubIndex implementation="com.yanncebron.m68kplugin.lang.stubs.index.M68kLabelStubIndex"/>
    <stubIndex implementation="com.yanncebron.m68kplugin.lang.stubs.index.M68kMacroStubIndex"/>

    <lang.quoteHandler
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.M68kQuoteHandler"/>
    <lang.braceMatcher
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.M68kBraceMatcher"/>
    <lang.commenter
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.M68kCommenter"/>
    <codeBlockSupportHandler
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.M68kConditionalAssemblyCodeBlockSupportHandler"/>

    <intentionAction>
      <!--suppress PluginXmlCapitalization -->
      <categoryKey>intentions.category</categoryKey>
      <className>com.yanncebron.m68kplugin.intentions.M68kShowUsedRegistersIntention</className>
    </intentionAction>

    <lang.syntaxHighlighterFactory
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.highlighting.M68kSyntaxHighlighterFactory"/>
    <colorSettingsPage
        implementation="com.yanncebron.m68kplugin.lang.highlighting.M68kColorSettingsPage"/>
    <annotator
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.highlighting.M68kSyntaxAnnotator"/>
    <codeInsight.lineMarkerProvider
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.highlighting.M68kMethodSeparatorLineMarkerProvider"/>
    <highlightErrorFilter
        implementation="com.yanncebron.m68kplugin.lang.highlighting.M68kMacroParameterHighlightErrorFilter"/>

    <lang.findUsagesProvider
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.findUsages.M68kFindUsagesProvider"/>
    <elementDescriptionProvider
        implementation="com.yanncebron.m68kplugin.lang.M68kElementDescriptionProvider"/>
    <usageTypeProvider
        implementation="com.yanncebron.m68kplugin.lang.findUsages.M68kUsageTypeProvider"/>

    <lang.refactoringSupport
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.refactoring.M68kRefactoringSupportProvider"/>
    <lang.namesValidator
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.refactoring.M68kNamesValidator"/>
    <lang.elementManipulator
        forClass="com.yanncebron.m68kplugin.lang.psi.expression.M68kLabelRefExpression"
        implementationClass="com.yanncebron.m68kplugin.lang.psi.expression.impl.M68kLabelRefExpressionElementManipulator"/>
    <typeName className="com.yanncebron.m68kplugin.lang.psi.M68kBuiltinSymbolPsiElement"
              resourceKey="presentation.type.builtin.symbol"/>

    <codeStyleSettingsProvider
        implementation="com.yanncebron.m68kplugin.settings.codestyle.M68kCodeStyleSettingsProvider"/>
    <langCodeStyleSettingsProvider
        implementation="com.yanncebron.m68kplugin.settings.codestyle.M68kLanguageCodeStyleSettingsProvider"/>

    <liveTemplateContext
        implementation="com.yanncebron.m68kplugin.template.M68kTemplateContextType"/>
    <defaultLiveTemplates
        file="/liveTemplates/M68kAssembler"/>

    <include.provider
        implementation="com.yanncebron.m68kplugin.lang.index.M68kFileIncludeProvider"/>


    <lang.psiStructureViewFactory
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.structureview.M68kStructureViewFactory"/>

    <moveLeftRightHandler
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.editor.M68kMoveLeftRightHandler"/>
    <flipCommaIntention.flipper
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.editor.M68kCommaFlipper"/>
    <extendWordSelectionHandler
        implementation="com.yanncebron.m68kplugin.editor.M68kLabelBlocksSelectionHandler"/>
    <lang.implementationTextSelectioner
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.editor.M68kImplementationTextSelectioner"/>

    <lang.foldingBuilder
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.editor.folding.M68kFoldingBuilder"/>
    <codeFoldingOptionsProvider
        instance="com.yanncebron.m68kplugin.editor.folding.M68kFoldingOptionsProvider"/>

    <lang.documentationProvider
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.documentation.M68kInstructionDocumentationProvider"/>
    <lang.documentationProvider
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.documentation.M68kLabelDocumentationProvider"/>
    <lang.documentationProvider
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.documentation.M68kNumberExpressionDocumentationProvider"/>

    <problemFileHighlightFilter
        implementation="com.yanncebron.m68kplugin.lang.M68kProblemFileHighlightFilter"/>

    <gotoSymbolContributor
        implementation="com.yanncebron.m68kplugin.navigation.M68kGotoLabelChooseByNameContributor"/>
    <moduleRendererFactory
        implementation="com.yanncebron.m68kplugin.navigation.M68kGotoLabelModuleRendererFactory"/>

    <completion.plainTextSymbol
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.completion.M68kPlainTextSymbolCompletionContributor"/>

    <spellchecker.support
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.lang.spellchecker.M68kSpellcheckerStrategy"/>
    <spellchecker.bundledDictionaryProvider
        implementation="com.yanncebron.m68kplugin.lang.spellchecker.M68kBundledDictionaryProvider"/>


    <lang.inspectionSuppressor
        language="M68k"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kInspectionSuppressor"/>
    <localInspection
        language="M68k" enabledByDefault="true" level="ERROR"
        key="inspection.directives.name" groupKey="inspection.group.name"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kDirectivesInspection"/>
    <localInspection
        language="M68k" enabledByDefault="true" level="ERROR"
        key="inspection.conditional.assembly.directives.name" groupKey="inspection.group.name"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kConditionalAssemblyDirectivesInspection"/>
    <localInspection
        language="M68k" enabledByDefault="true" level="ERROR"
        key="inspection.register.list.range.name" groupKey="inspection.group.name"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kRegisterListRangeInspection"/>
    <localInspection
        language="M68k" enabledByDefault="true" level="ERROR"
        key="inspection.unresolved.label.reference.name" groupKey="inspection.group.name"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kUnresolvedLabelReferenceInspection"/>
    <localInspection
        language="M68k" enabledByDefault="true" level="ERROR"
        key="inspection.unresolved.macro.reference.name" groupKey="inspection.group.name"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kUnresolvedMacroReferenceInspection"/>
    <localInspection
        language="M68k" enabledByDefault="true" level="WARNING" cleanupTool="true"
        key="inspection.usage.a7.register.name" groupKey="inspection.group.name"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kUsageA7RegisterInspection"/>
    <localInspection
        language="M68k" enabledByDefault="true" level="WARNING" cleanupTool="true"
        key="inspection.unused.label.name" groupKey="inspection.group.name"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kUnusedLabelInspection"/>
    <localInspection
        language="M68k" enabledByDefault="true" level="WARNING"
        key="inspection.simplifiable.expression.name" groupKey="inspection.group.name"
        implementationClass="com.yanncebron.m68kplugin.inspections.M68kSimplifiableExpressionInspection"/>


    <toolWindow
        id="M68kBrowser"
        icon="M68kIcons.TOOL_WINDOW"
        anchor="right"
        factoryClass="com.yanncebron.m68kplugin.browser.M68kBrowserToolwindowFactory"/>


    <consoleFilterProvider
        implementation="com.yanncebron.m68kplugin.compiler.M68kVasmConsoleFilterProvider"/>


    <fileType name="PLAIN_TEXT" fileNames="FILE_ID.DIZ" fileNamesCaseInsensitive="startup-sequence" extensions="nfo"/>
  </extensions>

  <extensions defaultExtensionNs="com.yanncebron.m68kplugin">
    <browserPane id="mnemonics"
                 order="first"
                 displayName="toolwindow.tab.mnemonic"
                 implementation="com.yanncebron.m68kplugin.browser.M68kMnemonicsBrowserPane"/>
    <browserPane id="directives"
                 order="after mnemonics"
                 displayName="toolwindow.tab.directives"
                 implementation="com.yanncebron.m68kplugin.browser.M68kDirectivesBrowserPane"/>
  </extensions>

  <actions>
    <action id="M68kProjectStatisticsAction" icon="AllIcons.Actions.Lightning"
            class="com.yanncebron.m68kplugin.internal.M68kProjectStatisticsAction"/>
  </actions>
</idea-plugin>